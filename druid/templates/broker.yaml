apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-{{ .Values.nodes.broker.name }}-deployment"
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  selector:
    matchLabels:
      name: "{{ .Chart.Name }}-{{ .Values.nodes.broker.name }}-rc"
      app: {{ template "fullname" . }}
  replicas: {{ .Values.nodes.broker.replicaCount }}
  template:
    metadata:
      labels:
        name: "{{ .Chart.Name }}-{{ .Values.nodes.broker.name }}-rc"
        app: {{ template "fullname" . }}
    spec:
      hostname: broker
      subdomain: druid
      containers:
      - name: "{{ .Chart.Name }}-{{ .Values.nodes.broker.name }}"
        image: "{{ .Values.nodes.broker.image.repository }}:{{ .Values.nodes.broker.image.tag }}"
        imagePullPolicy: {{ .Values.nodes.broker.image.pullPolicy }}
        args: ["broker"]
        volumeMounts:
          - name: {{ .Values.nodes.broker.configVolumeClaim }}
            mountPath: {{ .Values.nodes.broker.configMountPath }}
        env:
           - name: MYSQL_CONNECT_URI
             valueFrom:
               secretKeyRef:
                 name: {{ .Values.secrets.name }}
                 key: {{ .Values.secrets.key.connectURI }}
           - name: MYSQL_USERNAME
             valueFrom:
               secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: {{ .Values.secrets.key.user }}
           - name: MYSQL_PASSWORD
             valueFrom:
               secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: {{ .Values.secrets.key.password }}
           - name: DRUID_XMX
             value: {{ .Values.env.druid_xmx }}
           - name: DRUID_XMS
             value: {{ .Values.env.druid_xms }}
           - name: DRUID_MAXNEWSIZE
             value: {{ .Values.env.druid_maxnewsize }}
           - name: DRUID_NEWSIZE
             value: {{ .Values.env.druid_newsize }}
           - name: S3_STORAGE_BUCKET
             value: {{ .Values.env.s3_storage_bucket }}
           - name: S3_INDEXING_BUCKET
             value: {{ .Values.env.s3_indexing_bucket }}
           - name: S3_ACCESS_KEY
             value: {{ .Values.env.s3_access_key }}
           - name: DRUID_HOSTNAME
             value: {{ .Values.nodes.coordinator.service.name }}
           - name: ZOOKEEPER_HOST
             value: {{ printf "%s-%s" .Release.Name "zookeeper" | trunc 34 }}
        #TODO add readiness & liveness probes
        #TODO reenable ressources here
        ports:
        {{range .Values.nodes.broker.service.ports }}
          - containerPort: {{ .port }}
        {{end}}

      volumes:
        - name: {{ .Values.nodes.coordinator.configVolumeClaim }}
          configMap:
            name: common-runtime-configmap
            items:
            - key: common.runtime.properties
              path: _common/common.runtime.properties
            - key: broker.runtime.properties
              path: broker/runtime.properties
            - key: broker.jvm.config
              path: broker/jvm.config
            - key: broker.main.config
              path: broker/main.config
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.nodes.broker.service.name }}
  #TODO flexible service Name, configMap
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  type: {{ .Values.nodes.broker.service.type }}
  ports:
  {{range .Values.nodes.broker.service.ports }}
  - name: {{ .name }}
    port: {{ .port }}
    nodePort: {{ .nodePort }}
  {{end}}
  selector:
    name: "{{ .Chart.Name }}-{{ .Values.nodes.broker.name }}-rc"